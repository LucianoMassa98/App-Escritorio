<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        P5NiVf0fwCADNj8SGBQAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="Codigo.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Nombre.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Descripcion.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Cantidad.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Precio.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Importe.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>